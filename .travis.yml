language: objective-c

osx_image: xcode8.3

env:
  global:
    - LC_CTYPE=en_US.UTF-8
    - PROJECT=VirgilCrypto.xcodeproj
    - IOS_FRAMEWORK_SCHEME="VirgilCrypto iOS"
    - MACOS_FRAMEWORK_SCHEME="VirgilCrypto macOS"
    - TVOS_FRAMEWORK_SCHEME="VirgilCrypto tvOS"
    - WATCHOS_FRAMEWORK_SCHEME="VirgilCrypto watchOS"
    - IOS_SDK=iphonesimulator10.3
    - MACOS_SDK=macosx10.12
    - TVOS_SDK=appletvsimulator10.2
    - WATCHOS_SDK=watchsimulator3.2
    - FRAMEWORK_NAME=VirgilCrypto
  matrix:
    - DESTINATION="OS=10.3.1,name=iPhone SE"          SCHEME="$IOS_FRAMEWORK_SCHEME"        SDK="$IOS_SDK"        TWO_STEP_BUILD_ENABLED="YES"    CARTHAGE_PLATFORM_NAME="iOS"        RUN_TESTS="YES"    PUBLISH_CARTHAGE="NO"     POD_LIB_LINT="YES"
    - DESTINATION="arch=x86_64"                       SCHEME="$MACOS_FRAMEWORK_SCHEME"      SDK="$MACOS_SDK"      TWO_STEP_BUILD_ENABLED="YES"    CARTHAGE_PLATFORM_NAME="Mac"        RUN_TESTS="YES"    PUBLISH_CARTHAGE="YES"    POD_LIB_LINT="NO"
    - DESTINATION="OS=10.2,name=Apple TV 1080p"       SCHEME="$TVOS_FRAMEWORK_SCHEME"       SDK="$TVOS_SDK"       TWO_STEP_BUILD_ENABLED="YES"    CARTHAGE_PLATFORM_NAME="tvOS"       RUN_TESTS="YES"    PUBLISH_CARTHAGE="NO"     POD_LIB_LINT="NO"
    - DESTINATION="OS=3.2,name=Apple Watch - 42mm"    SCHEME="$WATCHOS_FRAMEWORK_SCHEME"    SDK="$WATCHOS_SDK"    TWO_STEP_BUILD_ENABLED="NO"     CARTHAGE_PLATFORM_NAME="watchOS"    RUN_TESTS="YES"    PUBLISH_CARTHAGE="NO"     POD_LIB_LINT="NO"

before_install:
  - set -o pipefail
  - brew update
  - brew outdated carthage || brew upgrade carthage
  - xcodebuild -version
  - xcodebuild -showsdks

script:
  - carthage update --platform "$CARTHAGE_PLATFORM_NAME"
  
  - |
    if [ $TWO_STEP_BUILD_ENABLED == "YES" ]; then
      # Build Framework
      xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES clean build-for-testing | xcpretty;
      # Build Framework in Release and Run Tests if specified
      if [ $RUN_TESTS == "YES" ]; then
        xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release GCC_GENERATE_TEST_COVERAGE_FILES=YES test-without-building | xcpretty;
      fi
    else
      # Build Framework
      xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES clean build | xcpretty;  
    fi

  # Build with carthage
  - if [ $PUBLISH_CARTHAGE == "YES" ]; then
      carthage build --no-skip-current;    
    fi
  
  # Check pod lib
  - if [ $POD_LIB_LINT == "YES" ]; then
      pod repo update;
      pod lib lint;
    fi

before_deploy:
  - carthage archive $FRAMEWORK_NAME

deploy:
  provider: releases
  api_key:
    secure: aG7D23eff40uF4U5IQhz/vlvvq8WeLDIcoLI32yr5q+IXqHlKSc4JuG8xM52PoU8Zmvvz6ay6CY28yFp2ecjjK0cnejg/cs30qzOrwYxO7D2/N9/bFIXgwZD20a33J/rz2PosIA+6XeBM6yHWYYOKF0MFK53JmzFIqe+lf4ABVN6rRp6XwVz9ATvalnKWTpwHh9oo5iayG1oeKBMx+zL8cCzXTlq6f2Ib8Sf8n/G5sKMTVhFD+idAPfhRHgk7m4HkyzZiT432b8M65r72c4qphWXFKeMM4RBFevQoM8XYwee+vjMLfIYfYFS3ory2JuAClEQjiG7MJVMqvTTAvJy/9cQ+NIhoP0NfLlVtMpLgog9rFXamkeoQ717/8MuB05aUiitIyV0skaybIXRYiuX5kAoKdMlsprOTMcupuDfE/VX24kc1+gVQafCJ+sS6tTl/b+zr7qniLnFFT8mmlXJMOgX/5Gchs/bwqlLDVF7M7TTxoBrPyCr0r8ovLyJkYCt45+vZgqXzkGg9U9IHQ6jiOz26IS1oJn4GuqiFY6r7TNBV16vL7nzi3iET6UXHUwv8jTlgeiyxj0WhaFH463EtUSthvWCDdb9hli78Gv7Nr82LYR7hNby6oVOlYW0ttUEJIlRfCHYrQlb3DN32n9tczy3vZBjl1EFUe8PJhvjLhs=
  file: "$FRAMEWORK_NAME.framework.zip"
  skip_cleanup: true
  on:
    repo: VirgilSecurity/virgil-foundation-x
    tags: true